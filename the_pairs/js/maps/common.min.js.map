{"version":3,"sources":["common.js"],"names":["app","Vue","el","data","cards","currentCards","donePairs","cardsFrozen","timer","computed","percentageProgress","this","length","methods","getCardSet","i","push","seniority","Math","floor","getRandomNumber","suit","$set","duplicateCardSet","min","max","random","cloneArray","cloneElem","key","concat","sort","mixCardSet","timerTick","openCards","index","_this","state","isAllDone","setTimeout","closeCards","_this2","closeTab","window","close","created"],"mappings":"AAAA,aAEA,IAAIA,IAAM,IAAIC,IAAI,CACjBC,GAAI,OACJC,KAAM,CACLC,MAAO,GACPC,aAAc,GACdC,UAAW,EACXC,aAAa,EACbC,MAAO,GAERC,SAAU,CACTC,mBAAoB,WACnB,OAAO,KAAOC,KAAKP,MAAMQ,OAAS,GAAKD,KAAKL,YAG9CO,QAAS,CACRC,WAAY,WACXH,KAAKP,MAAQ,GACbO,KAAKL,UAAY,EACjBK,KAAKJ,aAAc,EAEnB,IAAK,IAAIQ,EADTJ,KAAKH,MAAQ,EACGO,EAAI,GAAIA,IACvBJ,KAAKP,MAAMY,KAAK,IAChBL,KAAKP,MAAMW,GAAGE,UAAYC,KAAKC,MAAMR,KAAKS,gBAAgB,EAAG,KAC7DT,KAAKP,MAAMW,GAAGM,KAAOH,KAAKC,MAAMR,KAAKS,gBAAgB,EAAG,IACxDT,KAAKW,KAAKX,KAAKP,MAAMW,GAAI,QAAS,UAEnCJ,KAAKY,oBAENH,gBAAiB,SAAyBI,EAAKC,GAC9C,OAAOD,EAAMN,KAAKQ,UAAYD,EAAM,EAAID,IAEzCD,iBAAkB,WAEjB,IADA,IAAII,EAAa,GACRZ,EAAI,EAAGA,EAAIJ,KAAKP,MAAMQ,OAAQG,IAAK,CAC3C,IAAIa,EAAY,GAChB,IAAK,IAAIC,KAAOlB,KAAKP,MAAMW,GAC1Ba,EAAUC,GAAOlB,KAAKP,MAAMW,GAAGc,GAEhCF,EAAWX,KAAKY,GAEjBjB,KAAKP,MAAQO,KAAKP,MAAM0B,OAAOH,GAC/BhB,KAAKP,MAAM2B,KAAKpB,KAAKqB,YACrBrB,KAAKsB,aAEND,WAAY,WACX,OAAOd,KAAKQ,SAAW,IAExBQ,UAAW,SAAmBC,GAC7B,IAAIC,EAAQzB,KAEZ,IAAKA,KAAKJ,aAA2C,WAA5BI,KAAKP,MAAM+B,GAAOE,MAG1C,GAFA1B,KAAKP,MAAM+B,GAAOE,MAAQ,SAC1B1B,KAAKN,aAAaW,KAAKL,KAAKP,MAAM+B,IACD,IAA7BxB,KAAKN,aAAaO,QAAgBD,KAAKN,aAAa,GAAGgB,OAASV,KAAKN,aAAa,GAAGgB,MAAQV,KAAKN,aAAa,GAAGY,YAAcN,KAAKN,aAAa,GAAGY,UAAW,CACnK,IAAK,IAAIF,EAAI,EAAGA,EAAIJ,KAAKN,aAAaO,OAAQG,IAC7CJ,KAAKN,aAAaU,GAAGsB,MAAQ,OAE9B1B,KAAKL,YACLK,KAAKN,aAAe,GACpBM,KAAK2B,iBACkC,IAA7B3B,KAAKN,aAAaO,SAC5BD,KAAKJ,aAAc,EACnBgC,WAAW,WACVH,EAAMI,cACJ,QAINA,WAAY,WACX,IAAK,IAAIzB,EAAI,EAAGA,EAAIJ,KAAKP,MAAMQ,OAAQG,IACV,WAAxBJ,KAAKP,MAAMW,GAAGsB,QACjB1B,KAAKP,MAAMW,GAAGsB,MAAQ,UAGxB1B,KAAKN,aAAe,GACpBM,KAAKJ,aAAc,GAEpB0B,UAAW,WACV,IAAIQ,EAAS9B,KAETA,KAAKL,UAAY,IACpBiC,WAAW,WACVE,EAAOjC,QACPiC,EAAOR,aACL,MAGLK,UAAW,WACa,KAAnB3B,KAAKL,YACRK,KAAKJ,aAAc,IAGrBmC,SAAU,WACTC,OAAOC,UAGTC,QAAS,WACRlC,KAAKG","file":"../common.min.js","sourcesContent":["'use strict';\n\nvar app = new Vue({\n\tel: '#app',\n\tdata: {\n\t\tcards: [],\n\t\tcurrentCards: [],\n\t\tdonePairs: 0,\n\t\tcardsFrozen: false,\n\t\ttimer: 0\n\t},\n\tcomputed: {\n\t\tpercentageProgress: function percentageProgress() {\n\t\t\treturn 100 / (this.cards.length / 2) * this.donePairs;\n\t\t}\n\t},\n\tmethods: {\n\t\tgetCardSet: function getCardSet() {\n\t\t\tthis.cards = [];\n\t\t\tthis.donePairs = 0;\n\t\t\tthis.cardsFrozen = false;\n\t\t\tthis.timer = 0;\n\t\t\tfor (var i = 0; i < 12; i++) {\n\t\t\t\tthis.cards.push({});\n\t\t\t\tthis.cards[i].seniority = Math.floor(this.getRandomNumber(2, 13));\n\t\t\t\tthis.cards[i].suit = Math.floor(this.getRandomNumber(0, 3));\n\t\t\t\tthis.$set(this.cards[i], 'state', 'closed');\n\t\t\t}\n\t\t\tthis.duplicateCardSet();\n\t\t},\n\t\tgetRandomNumber: function getRandomNumber(min, max) {\n\t\t\treturn min + Math.random() * (max + 1 - min);\n\t\t},\n\t\tduplicateCardSet: function duplicateCardSet() {\n\t\t\tvar cloneArray = [];\n\t\t\tfor (var i = 0; i < this.cards.length; i++) {\n\t\t\t\tvar cloneElem = {};\n\t\t\t\tfor (var key in this.cards[i]) {\n\t\t\t\t\tcloneElem[key] = this.cards[i][key];\n\t\t\t\t}\n\t\t\t\tcloneArray.push(cloneElem);\n\t\t\t}\n\t\t\tthis.cards = this.cards.concat(cloneArray);\n\t\t\tthis.cards.sort(this.mixCardSet);\n\t\t\tthis.timerTick();\n\t\t},\n\t\tmixCardSet: function mixCardSet() {\n\t\t\treturn Math.random() - 0.5;\n\t\t},\n\t\topenCards: function openCards(index) {\n\t\t\tvar _this = this;\n\n\t\t\tif (!this.cardsFrozen && this.cards[index].state !== 'opened') {\n\t\t\t\tthis.cards[index].state = 'opened';\n\t\t\t\tthis.currentCards.push(this.cards[index]);\n\t\t\t\tif (this.currentCards.length === 2 && this.currentCards[0].suit === this.currentCards[1].suit && this.currentCards[0].seniority === this.currentCards[1].seniority) {\n\t\t\t\t\tfor (var i = 0; i < this.currentCards.length; i++) {\n\t\t\t\t\t\tthis.currentCards[i].state = 'done';\n\t\t\t\t\t}\n\t\t\t\t\tthis.donePairs++;\n\t\t\t\t\tthis.currentCards = [];\n\t\t\t\t\tthis.isAllDone();\n\t\t\t\t} else if (this.currentCards.length === 2) {\n\t\t\t\t\tthis.cardsFrozen = true;\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t_this.closeCards();\n\t\t\t\t\t}, 1200);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcloseCards: function closeCards() {\n\t\t\tfor (var i = 0; i < this.cards.length; i++) {\n\t\t\t\tif (this.cards[i].state === 'opened') {\n\t\t\t\t\tthis.cards[i].state = 'closed';\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.currentCards = [];\n\t\t\tthis.cardsFrozen = false;\n\t\t},\n\t\ttimerTick: function timerTick() {\n\t\t\tvar _this2 = this;\n\n\t\t\tif (this.donePairs < 12) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t_this2.timer++;\n\t\t\t\t\t_this2.timerTick();\n\t\t\t\t}, 1000);\n\t\t\t}\n\t\t},\n\t\tisAllDone: function isAllDone() {\n\t\t\tif (this.donePairs === 12) {\n\t\t\t\tthis.cardsFrozen = true;\n\t\t\t}\n\t\t},\n\t\tcloseTab: function closeTab() {\n\t\t\twindow.close();\n\t\t}\n\t},\n\tcreated: function created() {\n\t\tthis.getCardSet();\n\t}\n});"]}